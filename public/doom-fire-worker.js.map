{"version":3,"file":"doom-fire-worker.js","sources":["../src/doom-fire-animation.mjs","../src/doom-fire-worker.js"],"sourcesContent":["/*\n * Copyright 2021 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nconst HTML_COLOR_SCALE = [\n  parseColor(0x070707), parseColor(0x1f0707), parseColor(0x2f0f07),\n  parseColor(0x470f07), parseColor(0x571707), parseColor(0x671f07),\n  parseColor(0x771f07), parseColor(0x8f2707), parseColor(0x9f2f07),\n  parseColor(0xaf3f07), parseColor(0xbf4707), parseColor(0xc74707),\n  parseColor(0xDF4F07), parseColor(0xDF5707), parseColor(0xDF5707),\n  parseColor(0xD75F07), parseColor(0xD7670F), parseColor(0xcf6f0f),\n  parseColor(0xcf770f), parseColor(0xcf7f0f), parseColor(0xCF8717),\n  parseColor(0xC78717), parseColor(0xC78F17), parseColor(0xC7971F),\n  parseColor(0xBF9F1F), parseColor(0xBF9F1F), parseColor(0xBFA727),\n  parseColor(0xBFA727), parseColor(0xBFAF2F), parseColor(0xB7AF2F),\n  parseColor(0xB7B72F), parseColor(0xB7B737), parseColor(0xCFCF6F),\n  parseColor(0xDFDF9F), parseColor(0xEFEFC7), parseColor(0xFFFFFF)   \n];\nconst UPDATE_INTERVAL = 1000 / 27; // DoomFire runs at 27FPS.\nexport default class DoomFireAnimation {\n  constructor(parent, canvas) {\n    this.canvas = canvas;\n    this.parent = parent;\n    this.flames = [];\n    this.width = 320;\n    this.height = 168;\n    this.ctx = canvas.getContext('2d');\n    this.imageData = this.ctx.getImageData(0, 0, this.width, this.height);    \n    this._init();\n    this.lastUpdate = 0;\n    this.active = true;\n    this.wind = 0;\n  }\n\n  posAt(x, y) {\n    return y * this.width + x;\n  }\n    \n  setValue(x, y, value) {\n    let pos = this.posAt(x, y);\n    this.flames[pos] = value; \n  }\n\n  valueAt(x, y) {\n    let pos = this.posAt(x, y);\n    return this.flames[pos];\n  }  \n\n  _init() {\n    this._initCanvas();\n    this._initFlames();\n  }\n\n  _initFlames() {\n    // Initialise the flames.\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 1; y < this.height; y++) {\n        this.setValue(x, y, 0);\n      }\n    }\n\n    for (let x = 0; x < this.width; x++) {\n      this.setValue(x, this.height - 1, 35);      \n    }\n  }\n\n  _initCanvas() {\n    // Initialise the canvas with black.\n    for (let i = 0; i < this.imageData.data.length; i++) {\n      this.imageData.data[i] = 0;\n      if (i % 4 == 3) this.imageData.data[i] = 255;\n    }\n  }\n\n  start() {\n    requestAnimationFrame(this._update.bind(this));\n  }\n\n  _update() {\n    let now = performance.now();\n    if (now - this.lastUpdate < UPDATE_INTERVAL) {\n      this.parent.requestAnimationFrame(this._update.bind(this));\n      return;\n    }\n\n    for (let srcY = 0; srcY < this.height; srcY++) {\n      const srcRow = srcY * this.width;\n      const dstRow = (srcY - 1) * this.width;\n      for (let srcX = 0; srcX < this.width; srcX++) {        \n        const srcIndex = srcRow + srcX;\n        const srcColor = this.flames[srcIndex];\n\n        if (srcY > 0) {\n          const rand = Math.floor(Math.random() * 3.0);\n          const dstColor = srcColor > 0 ? srcColor - (rand & 1) : 0;\n  \n          let dstX = srcX + rand - 1 + this.wind;\n          if (dstX >= this.width) {\n            dstX = dstX - this.width;\n          } else if (dstX < 0) {\n            dstX = dstX + this.width;\n          }\n            \n          const index = dstRow + dstX;\n          this.flames[index] = dstColor; \n        }\n  \n        const pos = (srcRow + srcX) * 4;  \n        if (srcColor > 0) {\n          const color = HTML_COLOR_SCALE[srcColor];\n          this.imageData.data[pos] = color.r;\n          this.imageData.data[pos + 1] = color.g;\n          this.imageData.data[pos + 2] = color.b;\n          this.imageData.data[pos + 3] = 255;\n        } else {\n          this.imageData.data[pos] = 0;\n          this.imageData.data[pos + 1] = 0;\n          this.imageData.data[pos + 2] = 0;\n          this.imageData.data[pos + 3] = 255;        \n        }\n      }\n    }\n    this.ctx.putImageData(this.imageData, 0, 0);  \n    this.lastUpdate = now;\n    this.parent.requestAnimationFrame(this._update.bind(this));\n  }\n\n  toggle() {\n    if (this.active) {\n      for (let x = 0; x < this.width; x++) {\n        this.setValue(x, this.height - 1, 0);      \n      }    \n    } else {\n      for (let x = 0; x < this.width; x++) {\n        this.setValue(x, this.height - 1, 35);      \n      }    \n    }\n    this.active = !this.active;    \n  }\n\n  setWind(amount) {\n    this.wind = amount;\n  }\n}\n\nfunction parseColor(color) {\n  const b = color & 0xFF;\n  const g = color >> 8 & 0xFF;\n  const r = color >> 16 & 0xFF;\n  return {r, g, b}\n}\n","/*\n * Copyright 2021 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport DoomFireAnimation from './doom-fire-animation.mjs';\n\nlet doomFireAnimation;\n\nself.onmessage = function(ev) {\n  if(ev.data.msg === 'init') {\n    doomFireAnimation = new DoomFireAnimation(self, ev.data.canvas);\n  }\n\n  if (ev.data.msg === 'start') {\n    doomFireAnimation.start();\n  }\n\n  if (ev.data.msg === 'toggle') {\n    doomFireAnimation.toggle();\n  }\n\n  if (ev.data.msg === 'wind') {\n    doomFireAnimation.setWind(ev.data.amount);\n  }\n}\n"],"names":["HTML_COLOR_SCALE","parseColor","DoomFireAnimation","constructor","parent","canvas","this","flames","width","height","ctx","getContext","imageData","getImageData","_init","lastUpdate","active","wind","posAt","x","y","setValue","value","pos","valueAt","_initCanvas","_initFlames","i","data","length","start","requestAnimationFrame","_update","bind","now","performance","srcY","srcRow","dstRow","srcX","srcIndex","srcColor","rand","Math","floor","random","dstColor","dstX","index","color","r","g","b","putImageData","toggle","setWind","amount","doomFireAnimation","self","onmessage","ev","msg"],"mappings":"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"}