!function(){"use strict";class t extends HTMLElement{constructor(){super(),this.active=!0,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.style.width="100%",this.canvas.style.height="100%";const t=this.canvas.transferControlToOffscreen();t.width=320,t.height=200,this.worker=new Worker("doom-fire-worker.js"),this.worker.postMessage({msg:"init",canvas:t},[t]),this.attachShadow({mode:"open"}).appendChild(this.canvas),this.addEventListener("click",()=>{this.toggle()})}connectedCallback(){this.worker.postMessage({msg:"start"})}update(){for(let t=0;t<this.width;t++)for(let a=0;a<this.height-1;a++){let e=3&Math.round(3*Math.random()),i=this.valueAt(t,a),s=i-(1&e),h=t+e-2,n=a+1;this.setValue(h,n,s);let o=4*((this.height-a)*this.width+t);if(i>0){let t=HTML_COLOR_SCALE[i];this.imageData.data[o]=t.r,this.imageData.data[o+1]=t.g,this.imageData.data[o+2]=t.b,this.imageData.data[o+3]=255}else this.imageData.data[o]=0,this.imageData.data[o+1]=0,this.imageData.data[o+2]=0,this.imageData.data[o+3]=255}this.ctx.putImageData(this.imageData,0,0),window.requestAnimationFrame(this.update.bind(this))}toggle(){if(this.active)for(let t=0;t<this.width;t++)this.setValue(t,0,0);else for(let t=0;t<this.width;t++)this.setValue(t,0,35);this.active=!this.active}}customElements.get("doom-fire")||customElements.define("doom-fire",t)}();
//# sourceMappingURL=bundle.js.map
